/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs
(
    "libOpenFOAM.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libgroovyBC.so"
    "libcompressibleTurbulenceModel.so"
    "libcompressibleRASModels.so"
    "libswakTopoSources.so"
    "libswakMeshQualityFunctionPlugin.so"
    "libswakLocalCalculationsFunctionPlugin.so"
    "libswakRandomFunctionPlugin.so"
    "libswakFvcSchemesFunctionPlugin.so"
    "libswakThermoTurbFunctionPlugin.so"
    "libswakSurfacesAndSetsFunctionPlugin.so"
);

application     chtMultiRegionSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         30000;

deltaT          1;

writeControl    timeStep;

writeInterval   1000;

purgeWrite      0;

writeFormat     binary;

//writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
(
    HeatLoss
    {
        type patchExpression;
        patches (inlet outlet);
        verbose true;
        aliases {
            alpha thermo:alpha;
        }
        expression"alpha*area()*snGrad(h)";
        accumulations (sum);
        region air;
        factor 1.;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    //listFields {
    //    type listRegisteredObjects;
    //    region rail;
    //}

    energyRegionAir{
        type swakExpression;
        region air;
        expression "sum(h*vol())";
        accumulations ( average );
        valueType internalField;
        verbose true;
        factor 1.;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    massFlow
    {
     type patchMassFlow;
     functionObjectLibs
       (
         "libsimpleFunctionObjects.so"
       );
     verbose true;
     patches
       (
         inlet
         outlet
       );
     region air;
     factor 1.;
     outputControlMode   timeStep;
     outputInterval    1;
    }

    velocities
    {
        type patchExpression;
        accumulations (
            min
            max
            average
        );
        expression "U";
        patches (
            inlet
            outlet
        );
        region air;
        verbose true;
        factor 1;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    p_rgh
    {
        type patchExpression;
        accumulations (
            min
            max
            average
        );
        expression "p_rgh";
        patches (
            inlet
            outlet
        );
        region air;
        verbose true;
        factor 1;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    p
    {
        type patchExpression;
        accumulations (
            min
            max
            average
        );
        expression "p";
        patches (
            inlet
            outlet
        );
        region air;
        verbose true;
        factor 1;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    airT
    {
        type patchExpression;
        accumulations (
            min
            max
            average
        );
        expression "T";
        patches ( inlet
                  outlet);
        region air;
        verbose true;
        factor 1;
        outputControlMode   timeStep;
        outputInterval    1;
    }
);
// ************************************************************************* //
