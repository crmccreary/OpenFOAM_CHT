/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs
(
    "libOpenFOAM.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libgroovyBC.so"
    "libcompressibleTurbulenceModel.so"
    "libcompressibleRASModels.so"
    "libswakTopoSources.so"
    "libswakMeshQualityFunctionPlugin.so"
    "libswakLocalCalculationsFunctionPlugin.so"
    "libswakRandomFunctionPlugin.so"
    "libswakFvcSchemesFunctionPlugin.so"
    "libswakThermoTurbFunctionPlugin.so"
    "libswakSurfacesAndSetsFunctionPlugin.so"
);

application     chtMultiRegionSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   1000;

purgeWrite      0;

writeFormat     binary;

//writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
(
    HeatLoss
    {
        type patchExpression;
        patches (inlet outlet);
        verbose true;
        aliases {
            alpha thermo:alpha;
        }
        expression"alpha*area()*snGrad(h)";
        accumulations (sum);
        region air;
        factor 1.;
        outputControlMode   timeStep;
        outputInterval    1;
    }

    massFlow
    {
     type patchMassFlow;
     functionObjectLibs
       (
         "libsimpleFunctionObjects.so"
       );
     verbose true;
     patches
       (
         inlet
         outlet
       );
     region air;
     factor 1.;
     outputControlMode   timeStep;
     outputInterval    1;
    }

    airOutletT
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( T );
    patches ( outlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airOutletU
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( U );
    patches ( outlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airOutletprgh
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( p_rgh );
    patches ( outlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airOutletp
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( p );
    patches ( outlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airInletT
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( T );
    patches ( inlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airInletU
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( U );
    patches ( inlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airInletprgh
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( p_rgh );
    patches ( inlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
    airInletp
    {
    type patchAverage;
    functionObjectLibs ("libsimpleFunctionObjects.so");
    fields ( p );
    patches ( inlet );
    region air;
    verbose true;
    factor 1;
    outputControlMode   timeStep;
    outputInterval    1;
    }
);
// ************************************************************************* //
